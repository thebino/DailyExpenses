name: Continuous Delivery Pipeline

on:
  push:
    branches:
      - main
      - development
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'gradle'

      - name: Decode Gradle Play Publisher Credentials
        id: decode_play_store_credentials
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'gradle_playstore_publisher_credentials.json'
          fileDir: './'
          encodedString: ${{ secrets.PLAYSTORE_CREDENTIALS }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run spotless
        run: |
          ./gradlew --console=plain check

  detekt:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run detekt
        run: |
          ./gradlew --console=plain detekt

      - name: Upload detekt reports
        uses: actions/upload-artifact@v2
        with:
          name: detekt
          path: app/build/reports/detekt/

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'gradle'

      - name: Run lint
        run: |
          ./gradlew --console=plain lint

      - name: Upload lint reports
        uses: actions/upload-artifact@v2
        with:
          name: lint
          path: |
            app/build/reports/lint*
            domain/build/reports/lint*
            data/build/reports/lint*

  unit_tests:
    needs: [ check ]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'gradle'

      - name: Run debug unit tests
        run: |
          ./gradlew --console=plain testDebugUnitTest --stacktrace

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: tests
          path: app/build/reports/tests

  # upload an android bundle to google play store into the internal test track
  deployment:
    needs: [ unit_tests ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache between builds
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode Android Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'android_release.keystore'
          encodedString: ${{ secrets.ANDROID_KEYSTORE }}

      - name: Decode Gradle Play Publisher Credentials
        id: decode_play_store_credentials
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'gradle_playstore_publisher_credentials.json'
          fileDir: './'
          encodedString: ${{ secrets.PLAYSTORE_CREDENTIALS }}

      - name: Build release bundle
        run: |
          ./gradlew --console=plain -PreleaseKeystore=${{ steps.decode_keystore.outputs.filePath }} -PreleaseStorePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} -PreleaseKeyAlias=${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }} -PreleaseKeyPassword=${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }} app:bundle

      - name: Publish release bundle
        run: |
          ./gradlew --console=plain app:publishBundle --artifact-dir app/build/outputs/bundle/release/app-release.aab
